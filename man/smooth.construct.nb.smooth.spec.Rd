% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/nb_basis.R
\name{smooth.construct.nb.smooth.spec}
\alias{smooth.construct.nb.smooth.spec}
\title{Smooths with No Basis}
\usage{
\method{smooth.construct}{nb.smooth.spec}(object, data, knots)
}
\arguments{
\item{object}{a smooth specification object, generated by \code{s()},
\code{te()}, \code{ti()}, or \code{t2()}, with \code{bs="nb"}}

\item{data}{a list containing just the data (including any by variable)
required by this term, with names corresponding to \code{object$term}
(and \code{object$by}). The \code{by} variable is the last element.}

\item{knots}{a list containing any knots supplied for basis setup - in same
   order and with same names as \code{data}. If supplied, coefficients
   will be used only at the indicated knot values. Can be \code{NULL},
   indicating all observed data values.}
}
\description{
The \code{nb} "basis" uses a separate coefficient for each value of
the variables this is a smooth function of. The coefficients are penalized
with a difference penalty. This basis is most useful when there are not very
many unique values of the variable, making dimension reduction unnecessary.
}
\details{
Note that the predict method needs to have the ability to evaluate the
basis at any point in the range of the data; this requires interpolation
for values between the observed data. The default is to use linear
interpolation to evaluate the basis at these points. Alternative
interpolation methods may be specified using the \code{xt} argument of the
function used to create \code{object} (usually \code{s()}). \code{xt="lowess"}
indicates lowess smoothing, and \code{xt="bspline"} indicates (unpenalized)
b-spline smoothing. This method will also be used in the construction of the
basis if the user specifies knots that are not equal to the unique data values.
}
\examples{
library(mgcv)
N <- 100
x <- sample(-3:3, N, replace=TRUE)
y <- sin(2*pi*x/6) + rnorm(N, sd=.5)
mod1 <- gam(y ~ s(x, bs="nb"))
plot(mod1)
xind <- seq(-3,3,by=.1)
lines(sin(xind) ~ xind, col="red")

# lowess interpolation
mod2 <- gam(y ~ s(x, bs="nb", xt="lowess"))
plot(mod2)
lines(sin(xind) ~ xind, col="red")

# b-spline interpolation
mod3 <- gam(y ~ s(x, bs="nb", xt="bspline"))
plot(mod3)
lines(sin(xind) ~ xind, col="red")
}
\author{
Jonathan Gellar \email{JGellar@mathematica-mpr.com}
}
\seealso{
\code{\link[mgcv]{smooth.construct}}
}

